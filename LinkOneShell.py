import serial
import time
import sys
import os

def interactive_serial():

	i = 0
	flag = 0
	bad_words = ['Wuwenjie',':count=0','CLI>']
	send_char = '\r\n'
	command = ''

	ser = serial.Serial(sys.argv[2],115200,parity="N",stopbits=1,bytesize=8,timeout=8,)

	if(ser.isOpen() == False): 
		try:
			ser.open()
		except ser.SerialException as error: 
			print("Can't open connection with " + sys.argv[1])
			print(error)

	while (command != 'exit'):

		command = input("pwn_link1>> ")
		ser.write((command + send_char).encode('utf-8'))
		ser.flush()
		response = ser.read(ser.inWaiting()).decode()
		response_check = response.split(':')

		for i in response_check: 

			if (i == 'Wuwenjie'): 
				flag = 1
				if (flag != 1):
					time.sleep(1)

			for i in bad_words:
				response = response.replace(i,'').replace(command,'')

		if(command == 'clear'):

			os.system('cls' if os.name == 'nt' else 'clear')

		else:

			print(response)

def short_help():

	sheet = r'''

	Format:

		>> py LinkOneShell.py --shell [PORT]

	Example: 

		>> py LinkOneShell.py --shell COM8

	Available commands:
	
		+--------------------------------------------------------------------+
		| reboot      restart     thread      time        nvram       syslog |
		| debug       splx        mbuf        ifconfig    ping        ipnat	 |
		| fw          route       envram      arp         tenda_arp   wl     |
		| wlconf      et          ?                                          |
		+--------------------------------------------------------------------+

	Use --help/-h for basic and -hh for advanced help	

	'''
	print(sheet)


if(sys.argv[1] == '--shell'):
	interactive_serial()
elif((sys.argv[1] == '--help') or (sys.argv[1] == '-h')):
	short_help()


# reboot      restart     thread      time        nvram       syslog
# debug       splx        mbuf        ifconfig    ping        ipnat
# fw          route       envram      arp         tenda_arp   wl
# wlconf      et